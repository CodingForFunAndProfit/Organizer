@import '~@angular/material/theming';

// mixin name will be used in main style.scss
@mixin gooeynav-component-theme($theme) {
    // retrieve variables from theme
    // (all possible variables, use only what you really need)
    $primary: map-get($theme, primary);
    $accent: map-get($theme, accent);
    $warn: map-get($theme, accent);
    $foreground: map-get($theme, foreground);
    $background: map-get($theme, background);

    // border: 2px solid mat-color($accent);

    //vars
    $fg: mat-color($primary);
    $bg: mat-color($accent);
    $pi: 3.14;

    //config
    $menu-items: 4;
    $open-distance: 105px;
    $opening-angle: $pi * 2;

    %goo {
        filter: url('#shadowed-goo');
        // debug
        //background:rgba(255,0,0,0.2);
    }
    %ball {
        background: $fg;
        border-radius: 100%;
        width: 80px;
        height: 80px;
        margin-left: -40px;
        position: absolute;
        top: 20px;
        color: white;
        text-align: center;
        line-height: 90px;
        transform: translate3d(0, 0, 0);
        transition: transform ease-out 200ms;
    }
    .menu-open {
        display: none;
    }
    .menu-item {
        @extend %ball;
    }
    .hamburger {
        $width: 25px;
        $height: 3px;
        width: $width;
        height: $height;
        background: white;
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-left: -$width/2;
        margin-top: -$height/2;
        transition: transform 200ms;
    }
    $hamburger-spacing: 8px;
    .hamburger-1 {
        transform: translate3d(0, -$hamburger-spacing, 0);
    }
    .hamburger-2 {
        transform: translate3d(0, 0, 0);
    }
    .hamburger-3 {
        transform: translate3d(0, $hamburger-spacing, 0);
    }
    .menu-open:checked + .menu-open-button {
        .hamburger-1 {
            transform: translate3d(0, 0, 0) rotate(45deg);
        }
        .hamburger-2 {
            transform: translate3d(0, 0, 0) scale(0.1, 1);
        }
        .hamburger-3 {
            transform: translate3d(0, 0, 0) rotate(-45deg);
        }
    }
    .menu {
        @extend %goo;
        $width: 650px;
        $height: 150px;
        position: fixed;
        z-index: 100;
        bottom: 0;
        left: 90px;
        // margin-left: -80px;
        // padding-top: 20px;
        // padding-left: 80px;
        width: $width;
        height: $height;
        box-sizing: border-box;
        font-size: 20px;
        text-align: left;
    }

    .menu-item {
        &:hover {
            background: mat-color($accent);
            color: $fg;
        }
        @for $i from 1 through $menu-items {
            &:nth-child(#{$i + 2}) {
                transition-duration: 180ms;
            }
        }
    }

    .menu-open-button {
        @extend %ball;
        z-index: 2;
        transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
        transition-duration: 400ms;
        // transform: scale(1.1, 1.1) translate3d(0, 0, 0);
        cursor: pointer;
    }
    .menu-open-button:hover {
        transform: scale(1.2, 1.2) translate3d(0, 0, 0);
    }
    .menu-open:checked + .menu-open-button {
        transition-timing-function: linear;
        transition-duration: 200ms;
        // transform: scale(0.8, 0.8) translate3d(0, 0, 0);
    }

    .menu-open:checked ~ .menu-item {
        transition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
        @for $i from 1 through $menu-items {
            &:nth-child(#{$i + 2}) {
                transition-duration: 90ms+ (100ms * $i);
                transform: translate3d(110px * $i, 0, 0);
            }
        }
    }
}
